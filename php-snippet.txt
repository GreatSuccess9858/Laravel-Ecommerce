{
	// Place your snippets for php here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"route get": {
		"prefix": "rget",
		"body": [
			// "Route::get('/$1',[${2:controller}::class,'${3:function name}'])->name('${4:route name}');"
			"Route::get('/$1','$2')->name('${3:route name}');"
		],
		"description": "route get"
	},
	"route post": {
		"prefix": "rpost",
		"body": [
			// "Route::post('/$1',[${2:controller}::class,'${3:function name}'])->name('${4:route name}');"
			"Route::post('/$1','$2')->name('${3:route name}');"
		],
		"description": "route post"
	},
	"rgroup": {
		"prefix": "rgroup",
		"body": [
			"Route::group( ['prefix'=>'','middleware'=>[''] ],function(){",
			"    $1",
			"});"
		],
		"description": "rgroup"
	},
	"function with request": {
		"prefix": "fnr",
		"body": [
			"public function ${1:function_name}(Request \\$request)",
			"{",
			"    ${2://function_body}",
			"}"
		],
		"description": "function with request"
	},
	"function": {
		"prefix": "fn",
		"body": [
			"public function ${1:function_name}($2)",
			"{",
			"    ${3://function_body}",
			"}"
		],
		"description": "function"
	},
	"return view": {
		"prefix": "rv",
		"body": [
			"return view('$1');",
		],
		"description": "return view"
	},
	"return view compact": {
		"prefix": "rvc",
		"body": [
			"return view('$1',compact('${2:variable}'));",
		],
		"description": "return view compact"
	},
	"return redirect back": {
		"prefix": "rback",
		"body": [
			"return redirect()->back()->with('success','$1');",
		],
		"description": "return redirect back"
	},
	"php raw": {
		"prefix": "phpraw",
		"body": [
			"<?php",
            "    $1",
			"?>",
		],
		"description": "return view compact"
	},
	"table interger": {
		"prefix": "tabint",
		"body": [
			"\\$table->integer('$1')->nullable();"
		],
		"description": "table int"
	},
	"table string": {
		"prefix": "tabstring",
		"body": [
			"\\$table->string('$1',${2:100})->nullable();"
		],
		"description": "table string"
	},
	"table text": {
		"prefix": "tabtext",
		"body": [
			"\\$table->text('$1')->nullable();"
		],
		"description": "table text"
	},
	"table float": {
		"prefix": "tabfloat",
		"body": [
			"\\$table->float('$1')->nullable();"
		],
		"description": "table float"
	},
	"return back with success": {
		"prefix": "returnsuccess",
		"body": [
			"return redirect()->back()->with('success','$1 successfully');"
		],
		"description": "table default"
	},
	"table default": {
		"prefix": "tabdefault",
		"body": [
			"\\$table->string('creator',100)->nullable();",
            "\\$table->string('slug',100)->nullable();",
            "\\$table->integer('status')->default(1);",
		],
		"description": "table default"
	},
}
